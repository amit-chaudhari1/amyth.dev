[{"content":"post: how I escaped tutorial hell first step starts with realizing you have a problem. Do you feel blank when you try to think of what should you do as a developer when you have an idea of your volition and you don’t have a clue how to get around coding it?\nDo you get frozen if there’s not a single youtube tutorial on the problem that holds your hand tighter than your lover?\nAre you not able to code anything significant if there is no tutorial on youtube or a blogpost or a step by step guide that guides you through the forest of development nightmares?\nIf you said yes to either of these questions, chief i’m sorry but you are kind of, maybe, proabably, surely in tutorial hell.\nThere’s different depths to it just like the world ruled by hades. and you my lovely Zagreus, are going to clear it rise up to the top.\nhttps://www.reddit.com/r/HadesTheGame/comments/fpdwns/stitched_together_map_of_the_climb_out_of_hades/\nPS- i’m a great fan of hades the game.\nI’ve got some boons advice that will help you clear the hell faster, and might help you in your adventures beyond the hell.\nBuild atomic projects Build small, really small, I’ve created a project whose sole feature was that it was able to connect to a postgres db and run a simple query that returns a Aur bhai!!! kya haal chaal\nAlso, There’s this other time when i created two different projects just so that i could understand how stateless auth and stateful auth.\nDid I tell you i created a dummy project just to mess with tsconfig.json and certain options within it?\nthese are not meant to be projects that go on your github or go on your resume, these projects that you will start working on will have a single sole purpose when you write them, to teach you.\nHaving this clear understanding that this was not supposed to be a product, a portfolio project or anything of that sorts will free your mind to experimentation, tom foolery, and random bull shittery, some of my most valuable lessons learnt have been while i was just messing around. You end up tinkering a lot because there’s no responsibility on you.\nMy reasoning behind this is simple: i did not think anything about this (project), as a result i was not worried of what i might end up breaking, hence i was not afraid to break things, and then proceed to understand what broke and why it broke, which helped me understand a lot about internals better.\nTeach yourself and others It’s called the Protégé effect .\nThe protégé effect is a psychological phenomenon where teaching, pretending to teach, or preparing to teach information to others helps a person learn that information. For example, a student who is studying for an exam could benefit from the protégé effect and improve their understanding of the material, by teaching that material to their peers.\nThis is one of the selfish reasons that has kept me eager to answer people and be open to helping others and answering development questions. (mostly on discord servers)\nFun fact: I have a kindergarten panda that’s used as a puppet to sit through all my lectures, all my debugging sessions, all my rants, and all my coping sessions, with all that he’s been through, i bet he knows enough to be called a CSE and EE majors graduate.\n\u0026lt;panda_image.png\u0026gt;\nGive yourself time hold your horses before you think 3 months and i’mma be a awesome expert. you could be, if you are already familiar with some other xyz tech. Sorry, you can’t just speed through everything. I’ve kept a mindset in the past where i thought if i could just focus enough on a single task, i could finish it much faster than others could, I’ve learnt that i’m not special and i take average times to learn. While you yourself could be a genius who only took 3 months to become an expert in X Language, you are very unlikely to be one though, speaking statistically.\nOften times new concepts NEED, and i mean they really NEED time to seep into your brain. if you don’t take time to understand certain important concepts, chances are, you will just blackbox them (link what blackboxing).\nYou sometimes need to give your self time to learn some skills. don’t be too hard on yourself, don’t give up, don’t cheat by just going ahead and looking at tutorials right away, try spending significant time attempting to solve your issues yourself. these tutorials should be your last efforts, and once you do get your solutions, you should spend time reflecting on where we went wrong with this, what could we do differently to not struggle here with this sorts of problems, and what makes this solution in this tutorial work. See how you are asking questions that will really make you understand and learn instead of just gulping through tutorials?\nNote: i don’t mean that black boxing is bad or something you should not do, I’m saying that black boxing basic concepts is a bad thing you could end up doing. different people have slightly different concepts of what qualify as basics. but the bulk list of topics remains the same for any field of development.\nand i’m not saying the kings and queens reading this are no genius. i hope you are, but even the best of them need time for certain things, and it’s okay.\nLearn to solve bugs/ troubleshoot\nCoding Challenges\nThere’s a bunch of challenges that are created for the sole purpose of teaching you some basics and helping you git gud at these skills you are struggling with.\nBut unlike tutorials and guids, they don’t hold your hand through the lands of perilous attacks filled with pitfalls orges and gotcha monsters and grim looking workarounds. They do be challenging you, challenging you to become a better developer.\nI’m listing some challenge sets i’ve heard of\ncryptopals (taught me crytpography) Neetcode.io (interview problems mostly) cses problem set ( math + cs related mostly fun problems ) SDE sheet (by striver) css challenge css battle list more read more, watch less Be comfortable to read a lot, i’ve seen people search for videos, instead of just going ahead and reading the documentations. Video or not, a structured blog/guide or not, you should be able to read a lot in order to find solutions to relatively small problems\nGIT GUD KID: at reading documentation This is the same point as the one above, no? NO, Reading documentation is a bit different. There’s a lot of well documented libraries, but oh boy there’s libraries with awful documentation, even better there’s libraries with no documentations willing to jump directly at api references, reading straight function implementations and the code comments within them, etc. Being proficient with things like these will make you feel that no matter what the library is, if “have” to use it, you can use it. This is a huge confidence boost\nLearn how to Ask for help Oh boy, the amount of times, i really won’t go into another one of these rants i promise myself.\nThings to think about when you are asking someone for help.\nAm i precisely mentioning my problem? Have I tried my best to solve this and I’m not able to? Have I provided the details of what I’ve tried and it did not work? Have I told them what I think might be the problem? what my thoughts are? Can I provide them CSB links or something similar that they can use to replicate my problem? Don’t strive for learning cause a project demands it, but rather cause learning is fun. This is not applicable to everyone, but I’ve found that people who are always learning about some xyz thing are more likely to solve a problem than people who’ve just learnt what was the absolute bare minimum for their project. This is also another reason I’m very slightly disappointed when people come up to ask whether they should learn Angular/rust/C++…. \u0026lt;insert language/framework/tech name here\u0026gt;. Yeah, you should just go ahead and give it a try. The concepts transfer, your brain struggles and ends up being a really nice thinking machine. it’s awesome to be constantly learning some xyz. it is a privilege many won’t be able to afford due to circumstances and I feel absolutely blessed to be among the folks who can.\nKey-घरी-घेऊन-जा (key takeaways) ","permalink":"https://localhost:1313/papermod/how_i_escaped_tutorial_hell/","summary":"post: how I escaped tutorial hell first step starts with realizing you have a problem. Do you feel blank when you try to think of what should you do as a developer when you have an idea of your volition and you don’t have a clue how to get around coding it?\nDo you get frozen if there’s not a single youtube tutorial on the problem that holds your hand tighter than your lover?","title":"How I escaped Tutorial Hell"},{"content":" Work Experience Wrky.ai, Remote – Founding Engineer, NOV 2021 – JUN 2022\nBuilt \u0026amp; documented complete GraphQL Type-safe API backend for the core platform application.\nHandled product pipeline across AWS using custom scripts on EC2 instances and AWS lambda instances.\nCreated and delivered a slack integration to improve product experience for organizations.\nMigrated a Laravel App to a more modern React + NodeJS stack.\nMaintained multiple projects at multiple development stages within the organization.\nThe Linux Foundation, Hyperledger, Remote – Intern, JUN 2021 – AUG 2021\nCurated a Global Collection of Learning Resources in DLT/ Blockchain.\nInitiated an interactive Knowledge Graph collective of learning resources in DLT.\nOptimised queries used for interacting with neo4j, a Graph Database.\nExperimented with a web crawler in Go (using colly), to crawl for DLT relevant resources.\nInteracted with the Hyperledger Community for feedback on the project initiative, curated a multilingual accessible questionnaire answered by about 12,000 blockchain developers.\nProjects Proc-Metastable A Procedural Sound Engine for creating music. Art-Print Factorio Utility allowing player resizable ascii-art style concrete layout within your factory in Factorio. Cerebral A Zettelkasten inspired knowledge base publisher that can be used for hosting Obsidian Databases. Chess Design Chess Challenge, written in C++ using SDL2. Karma.nvim A NeoVim theme supporting a bunch of vim packages like lua line, telescope, etc. DLT Finance App Deposit ERC20 tokens to the smart contract and mint Farm Tokens In this project build a DeFi Application with Solidity where users can deposit an ERC20 token to the smart contract and it will mint and transfer Farm Tokens to them. The users can later withdraw their ERC20 tokens by burning their Farm Token on smart contract and the ERC20 tokens will be transferred back to them. Skills NodeJS, Redis, Web3, Golang, NestJS, ReactJS, GraphQL, TypeScript, Python, JavaScript, Neo4j, Perl, LUA, Git, SQL, NoSQL, WASM, Google Cloud Platform, AWS, Ruby, C++ and Rust.\nProfile Links LeetCode | Linkedin | Github | Twitter\n","permalink":"https://localhost:1313/resume/","summary":"Work Experience Wrky.ai, Remote – Founding Engineer, NOV 2021 – JUN 2022\nBuilt \u0026amp; documented complete GraphQL Type-safe API backend for the core platform application.\nHandled product pipeline across AWS using custom scripts on EC2 instances and AWS lambda instances.\nCreated and delivered a slack integration to improve product experience for organizations.\nMigrated a Laravel App to a more modern React + NodeJS stack.\nMaintained multiple projects at multiple development stages within the organization.","title":"Resume"},{"content":" Heya 👋 I\u0026rsquo;m Amit Chaudhari (Amyth), Thank you for checking out my website.\nI\u0026rsquo;m focused on developer experience, altruism, and being a better Engineer (I try my best). The journey of self learning my way from the ground up has been one of the most satisfying experiences in my life. Head over to my LinkedIn/Twitter, if you want to connect with me professionally.\nI\u0026rsquo;m looking for jobs that\u0026rsquo;d help me solve impactful problems, transform my career, and improve me.\nHere\u0026rsquo;s my resume, if you are interested in hiring me.\nI\u0026rsquo;m currently hacking away at my projects, tinkering with some code probably, solving problems, optimising solutions, removing bottlenecks.\nI\u0026rsquo;m an engineer , with a degree in Electrical Engineering, though I\u0026rsquo;ve always been interested in computers. My first encounter with scripting, engineering (reverse engineering, more accurately) was figuring out how to get unlimited bullets in a single player mil-sim campaign game called Operation Flashpoint (by Bohemia Interactive). So, as a result I developed a simple util within cheat engine as my first program. This was all during high school when I had all the time in the world to tinker around.\nAfter high school, I studied web app security for working inside public and private VDP\u0026rsquo;s (Vulnerability Disclosure Programs) on some popular platforms . It was at that time, while tinkering away day and night, where I understood my liking for Designing systems, Backend engineering and solving and problems and optimising solutions. I\u0026rsquo;ve been fortunate enough to be gifted with all the awareness I had during my engineering years, I focused mainly on clearing my major subjects and devoted rest of my attention learning more about backend systems, distributed systems, Distributed Ledgers. I\u0026rsquo;ve also done some work in mobile app development (using Flutter). In my evenings I like to read books and RFCs, write articles, code things, gaming, play guitar and spend time with some of my favorite people in life.\nI\u0026rsquo;m into : Music production Audiophilia Guitars Custom mechanical keyboards CS:GO Valorant Factorio Retro Electronics Digital Art (Blender) Anime \u0026amp; Manga.\nOther Stuff Games I play (hey I\u0026rsquo;d love to talk with you if you think we enjoy similar games 💜)\nGear I use daily.\nNeovim config I\u0026rsquo;m currently using\n(if you\u0026rsquo;ve read THIS much about me, just head over to twitter and say Hi 👋, I\u0026rsquo;d appreciate it)\n","permalink":"https://localhost:1313/about/","summary":"Heya 👋 I\u0026rsquo;m Amit Chaudhari (Amyth), Thank you for checking out my website.\nI\u0026rsquo;m focused on developer experience, altruism, and being a better Engineer (I try my best). The journey of self learning my way from the ground up has been one of the most satisfying experiences in my life. Head over to my LinkedIn/Twitter, if you want to connect with me professionally.\nI\u0026rsquo;m looking for jobs that\u0026rsquo;d help me solve impactful problems, transform my career, and improve me.","title":"About Me"}]